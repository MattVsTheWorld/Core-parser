f = 3;
g x y = let z = x in z;

h x = case (let y = x in y) of
   <1> -> 2;
   <2> -> 5;

k = 15;
u = k - f;
toggle = Pack{1,0} | Pack{2,0};

oct g x = let h = twice g
          in let k = twice h
          in k (k x);

isRed c = case c of
               <1> -> Pack{1,0};
               <2> -> Pack{2,0};
               <3> -> Pack{2,0};

double_list xs = map (\ x. 2*x) xs;

quad_plus_one x = 1 + (let tx = x+x in tx+tx);

main = oct i 4

